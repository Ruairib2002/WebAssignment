<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>WebAssignment</title>

  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>

  <!-- Import map should be loaded before any JavaScript -->
  <%= javascript_importmap_tags %>

  <!-- Include stylesheets -->
  <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>

  <!-- Include Google Maps API Script with Environment Variable for API Key -->
  <script>
    // Insert the Google API key into the script dynamically using an environment variable
    const googleApiKey = "<%= ENV['GOOGLE_API_KEY'] %>";
    const script = document.createElement('script');
    script.src = `https://maps.googleapis.com/maps/api/js?key=${googleApiKey}&callback=initMap`;
    script.async = true;
    script.defer = true;
    document.head.appendChild(script);
  </script>
</head>

<body>
  <div class="flash-messages">
    <% if notice %>
    <div class="alert alert-success">
      <%= notice %>
    </div>
    <% end %>
    <% if alert %>
    <div class="alert alert-danger">
      <%= alert %>
    </div>
    <% end %>
  </div>

  <!-- Render the sidebar if it exists -->
  <%= render 'layouts/sidebar' %>

  <main class="container mx-auto mt-28 px-5 flex">
    <!-- Main content will be injected here -->
    <%= yield %>
  </main>

  <!-- Map rendering container -->
  <h1>GPS Map</h1>
  <div id="map" style="height: 500px; width: 100%;"></div>

  <!-- Initialize Map -->
  <script>
    // Define initMap globally to make it accessible to Google Maps API
    window.initMap = function() {
        // Initialize the map with a default center and zoom level
        const map = new google.maps.Map(document.getElementById('map'), {
          center: {
            lat: 37.7749,
            lng: -122.4194
          }, // San Francisco as default center
          zoom: 12,
        });

        // Inject the issues from the controller into the JavaScript
        const issues = < %= raw @issues.to_json % > ; // Injected JSON

        // Loop through each issue and add a marker to the map
        issues.forEach(issue => {